{"version":3,"sources":["main.d.ts","usePositions.ts","useMouse.ts","useTouchPositions.ts","utils.js","App.tsx","Synths.ts","positionToColor.ts","serviceWorker.ts","index.tsx"],"names":["InitialPosition","x","y","_x","_y","usePositions","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","useState","position","setPosition","leftDown","setLeftDown","rightDown","setRightDown","useWindowSize","windowWidth","width","windowHeight","height","mouseDown","useCallback","ev","clientX","clientY","buttons","mouseMove","mouseUp","cancel","preventDefault","useEffect","window","addEventListener","removeEventListener","useMouse","_positions","trackedTouches","setTrackedTouches","positions","setPositions","touchStart","touches","changedTouches","indexes","Object","keys","changed","values","map","i","index","parseInt","touchMove","touchEnd","useTouchPositions","push","Octave","a","this","b","Math","pow","aSharp","gSharp","g","fSharp","f","e","dSharp","d","cSharp","c","buildFrequencies","scale","frequencies","octave","o","note","sort","reverse","closestFrequency","frequency","closest","diff","length","abs","Container","styled","svg","synths","synthStart","triggerAttack","synthsStart","updatedPositions","forEach","synthUpdate","value","synthsUpdate","synthEnd","triggerRelease","synthsEnd","Synth","oscillator","type","toMaster","App","canvas","useRef","p","ref","r","round","sin","cos","positionToColor","key","cx","cy","fill","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1b98ca42.chunk.js","sourcesContent":["export type Position = {\n  x: number;\n  y: number;\n  _x: number;\n  _y: number;\n};\n\nexport type IndexPosition = Position & { index: number };\n\nexport const InitialPosition = {\n  x: -1,\n  y: -1,\n  _x: -1,\n  _y: -1\n};\n","import { useMouse } from \"./useMouse\";\nimport { useTouchPositions } from \"./useTouchPositions\";\nimport { Position, IndexPosition } from \"./main.d\";\n\ninterface Props {\n  onMouseDown?: (position: Position) => void;\n  onMouseMove?: (position: Position) => void;\n  onMouseUp?: () => void;\n  onTouchStart?: (positions: IndexPosition[]) => void;\n  onTouchMove?: (positions: IndexPosition[]) => void;\n  onTouchEnd?: (positions: IndexPosition[]) => void;\n}\n\nexport const usePositions = ({\n  onMouseDown,\n  onMouseMove,\n  onMouseUp,\n  onTouchStart,\n  onTouchMove,\n  onTouchEnd\n}: Props) => {\n  const { position, leftDown, rightDown } = useMouse({\n    onMouseDown,\n    onMouseMove,\n    onMouseUp\n  });\n  const { positions: _positions } = useTouchPositions({\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd\n  });\n  const positions: Position[] = [..._positions];\n\n  if ((leftDown || rightDown) && position) {\n    positions.push(position);\n  }\n\n  return positions;\n};\n","import { useEffect, useState, useCallback } from \"react\";\nimport { useWindowSize } from \"react-use\";\n\nimport { Position, InitialPosition } from \"./main.d\";\n\ninterface Props {\n  onMouseDown?: (position: Position) => void;\n  onMouseMove?: (position: Position) => void;\n  onMouseUp?: () => void;\n}\n\ninterface Return {\n  position: Position;\n  leftDown: boolean;\n  rightDown: boolean;\n}\n\nexport const useMouse = ({\n  onMouseDown,\n  onMouseMove,\n  onMouseUp\n}: Props): Return => {\n  const [position, setPosition] = useState<Position>(InitialPosition);\n  const [leftDown, setLeftDown] = useState(false);\n  const [rightDown, setRightDown] = useState(false);\n\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n\n  const mouseDown = useCallback(\n    (ev: MouseEvent) => {\n      const { clientX: x, clientY: y, buttons } = ev;\n\n      setPosition({\n        x: x / windowWidth,\n        y: y / windowHeight,\n        _x: x,\n        _y: y\n      });\n\n      switch (buttons) {\n        case 1:\n          setLeftDown(true);\n          setRightDown(false);\n          break;\n        case 2:\n          setLeftDown(false);\n          setRightDown(true);\n          break;\n        case 3:\n          setLeftDown(true);\n          setRightDown(true);\n          break;\n        default:\n          setLeftDown(false);\n          setRightDown(false);\n          break;\n      }\n\n      onMouseDown && position && onMouseDown(position);\n    },\n    [onMouseDown, position, windowWidth, windowHeight]\n  );\n\n  const mouseMove = useCallback(\n    (ev: MouseEvent) => {\n      const { clientX: x, clientY: y } = ev;\n      setPosition({\n        x: x / windowWidth,\n        y: y / windowHeight,\n        _x: x,\n        _y: y\n      });\n\n      onMouseMove && position && onMouseMove(position);\n    },\n    [position, windowWidth, windowHeight, onMouseMove]\n  );\n\n  const mouseUp = useCallback(\n    (ev: MouseEvent) => {\n      const { buttons } = ev;\n\n      switch (buttons) {\n        case 1:\n          setLeftDown(true);\n          setRightDown(false);\n          break;\n        case 2:\n          setLeftDown(false);\n          setRightDown(true);\n          break;\n        case 3:\n          setLeftDown(true);\n          setRightDown(true);\n          break;\n        default:\n          setLeftDown(false);\n          setRightDown(false);\n          break;\n      }\n\n      if (!leftDown && !rightDown) {\n        setPosition(InitialPosition);\n      }\n\n      onMouseUp && onMouseUp();\n    },\n    [leftDown, rightDown, onMouseUp]\n  );\n\n  const cancel = useCallback((ev: MouseEvent) => {\n    ev.preventDefault();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", mouseDown);\n    window.addEventListener(\"mousemove\", mouseMove);\n    window.addEventListener(\"mouseup\", mouseUp);\n    window.addEventListener(\"contextmenu\", cancel);\n\n    return () => {\n      window.removeEventListener(\"mousedown\", mouseDown);\n      window.removeEventListener(\"mousemove\", mouseMove);\n      window.removeEventListener(\"mouseup\", mouseUp);\n      window.removeEventListener(\"contextmenu\", cancel);\n    };\n  }, [\n    windowWidth,\n    windowHeight,\n    onMouseDown,\n    onMouseMove,\n    onMouseUp,\n    position,\n    leftDown,\n    rightDown,\n    cancel,\n    mouseDown,\n    mouseMove,\n    mouseUp\n  ]);\n\n  return { position, leftDown, rightDown };\n};\n","import { useEffect, useState } from \"react\";\n\nimport { useWindowSize } from \"react-use\";\nimport { Position } from \"./main.d\";\n\nexport type IndexPosition = Position & { index: number };\n\ninterface Props {\n  onTouchStart?: (positions: IndexPosition[]) => void;\n  onTouchMove?: (positions: IndexPosition[]) => void;\n  onTouchEnd?: (positions: IndexPosition[]) => void;\n}\n\nexport const useTouchPositions = ({\n  onTouchStart,\n  onTouchMove,\n  onTouchEnd\n}: Props) => {\n  const [trackedTouches, setTrackedTouches] = useState<TouchList | null>(null);\n  const [positions, setPositions] = useState<IndexPosition[]>([]);\n\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n\n  useEffect(() => {\n    function touchStart(ev: TouchEvent) {\n      const { touches, changedTouches } = ev;\n\n      setTrackedTouches(touches);\n\n      const indexes = Object.keys(changedTouches);\n      const changed = Object.values(changedTouches).map(\n        ({ clientX, clientY }, i) => ({\n          x: clientX / windowWidth,\n          y: clientY / windowHeight,\n          _x: clientX,\n          _y: clientY,\n          index: parseInt(indexes[i], 10)\n        })\n      );\n      onTouchStart && onTouchStart(changed);\n\n      const _positions = Object.values(touches).map(\n        ({ clientX, clientY }, i) => ({\n          x: clientX / windowWidth,\n          y: clientY / windowHeight,\n          _x: clientX,\n          _y: clientY,\n          index: parseInt(indexes[i], 10)\n        })\n      );\n      setPositions(_positions);\n    }\n\n    function touchMove(ev: TouchEvent) {\n      const { touches, changedTouches } = ev;\n\n      setTrackedTouches(touches);\n\n      const indexes = Object.keys(changedTouches);\n      const changed = Object.values(changedTouches).map(\n        ({ clientX, clientY }, i) => ({\n          x: clientX / windowWidth,\n          y: clientY / windowHeight,\n          _x: clientX,\n          _y: clientY,\n          index: parseInt(indexes[i], 10)\n        })\n      );\n      onTouchMove && onTouchMove(changed);\n\n      const _positions = Object.values(touches).map(\n        ({ clientX, clientY }, i) => ({\n          x: clientX / windowWidth,\n          y: clientY / windowHeight,\n          _x: clientX,\n          _y: clientY,\n          index: parseInt(indexes[i], 10)\n        })\n      );\n      setPositions(_positions);\n    }\n\n    function touchEnd(ev: TouchEvent) {\n      const { touches, changedTouches } = ev;\n\n      setTrackedTouches(touches);\n\n      const indexes = Object.keys(changedTouches);\n      const changed = Object.values(changedTouches).map(\n        ({ clientX, clientY }, i) => ({\n          x: clientX / windowWidth,\n          y: clientY / windowHeight,\n          _x: clientX,\n          _y: clientY,\n          index: parseInt(indexes[i], 10)\n        })\n      );\n      onTouchEnd && onTouchEnd(changed);\n\n      const _positions = Object.values(touches).map(\n        ({ clientX, clientY }, i) => ({\n          x: clientX / windowWidth,\n          y: clientY / windowHeight,\n          _x: clientX,\n          _y: clientY,\n          index: parseInt(indexes[i], 10)\n        })\n      );\n      setPositions(_positions);\n    }\n\n    window.addEventListener(\"touchstart\", touchStart);\n    window.addEventListener(\"touchmove\", touchMove);\n    window.addEventListener(\"touchend\", touchEnd);\n\n    return () => {\n      window.removeEventListener(\"touchstart\", touchStart);\n      window.removeEventListener(\"touchmove\", touchMove);\n      window.removeEventListener(\"touchend\", touchEnd);\n    };\n  }, [windowHeight, windowWidth, onTouchStart, onTouchMove, onTouchEnd]);\n\n  return { positions, touches: trackedTouches };\n};\n","class Octave {\n  constructor(a) {\n    this.b = a * Math.pow(2, 2 / 12);\n    this.aSharp = a * Math.pow(2, 1 / 12);\n    this.a = a;\n    this.gSharp = a * Math.pow(2, -1 / 12);\n    this.g = a * Math.pow(2, -2 / 12);\n    this.fSharp = a * Math.pow(2, -3 / 12);\n    this.f = a * Math.pow(2, -4 / 12);\n    this.e = a * Math.pow(2, -5 / 12);\n    this.dSharp = a * Math.pow(2, -6 / 12);\n    this.d = a * Math.pow(2, -7 / 12);\n    this.cSharp = a * Math.pow(2, -8 / 12);\n    this.c = a * Math.pow(2, -9 / 12);\n  }\n}\n\nexport const buildFrequencies = () => {\n  const A4 = 440;\n  let scale = [];\n  let frequencies = [];\n\n  for (let i = -2; i < 4; i += 1) {\n    let a = A4 * Math.pow(2, i);\n    let octave = new Octave(a);\n    scale.push(octave);\n  }\n\n  scale.map(o => {\n    for (var note in o) {\n      frequencies.push(o[note]);\n    }\n  });\n\n  frequencies.sort((a, b) => a - b);\n  frequencies.reverse();\n\n  return frequencies;\n};\n\nexport const closestFrequency = (\n  frequency,\n  frequencies = buildFrequencies()\n) => {\n  let diff = 10000;\n  let closest;\n\n  for (let i = 0; i < frequencies.length; i += 1) {\n    const d = Math.abs(frequency - frequencies[i]);\n\n    if (d < diff) {\n      diff = d;\n      closest = frequencies[i];\n    }\n  }\n\n  return closest;\n};\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { usePositions } from \"./usePositions\";\nimport { positionToColor } from \"./positionToColor\";\nimport Synths from \"./Synths\";\nimport { IndexPosition, Position } from \"./main.d\";\n\nimport \"./App.css\";\n\nconst Container = styled.svg`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n`;\n\nconst synths = new Synths();\n\nfunction App() {\n  const canvas = useRef<SVGSVGElement>(null);\n\n  const onMouseDown = (p: Position) => synths.synthStart(p);\n  const onMouseMove = (p: Position) => synths.synthUpdate(p);\n  const onMouseUp = () => synths.synthEnd();\n  const onTouchStart = (p: IndexPosition[]) => synths.synthsStart(p);\n  const onTouchMove = (p: IndexPosition[]) => synths.synthsUpdate(p);\n  const onTouchEnd = (p: IndexPosition[]) => synths.synthsEnd(p);\n\n  const positions = usePositions({\n    onMouseDown,\n    onMouseMove,\n    onMouseUp,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd\n  });\n\n  return (\n    <Container ref={canvas}>\n      {positions.map(({ x, y, _x, _y }, i) => {\n        if (x === -1 && y === -1) {\n          return null;\n        }\n\n        const { r, g, b } = positionToColor(x, y);\n        return (\n          <circle\n            key={`element${i}`}\n            cx={_x}\n            cy={_y}\n            r={30}\n            fill={`rgb(${r},${g},${b})`}\n          />\n        );\n      })}\n    </Container>\n  );\n}\n\nexport default App;\n","import { Synth } from \"tone\";\nimport { closestFrequency } from \"./utils\";\nimport { Position, IndexPosition } from \"./main\";\n\nconst SYNTH_COUNT = 10;\nconst MAX_FREQ = 500;\nconst MIN_FREQ = 30;\n\nexport default class Synths {\n  synths: Synth[];\n\n  constructor() {\n    this.synths = [];\n\n    for (let i = 0; i < SYNTH_COUNT; i += 1) {\n      this.synths = [\n        ...this.synths,\n        new Synth({ oscillator: { type: \"triangle\" } }).toMaster()\n      ];\n    }\n  }\n\n  synthStart = ({ x }: Position) => {\n    if (this.synths.length === 0) {\n      return;\n    }\n\n    this.synths[0].triggerAttack(closestFrequency(MAX_FREQ * x + MIN_FREQ));\n  };\n\n  synthsStart = (updatedPositions: IndexPosition[]) => {\n    if (this.synths.length === 0) {\n      return;\n    }\n\n    updatedPositions.forEach(({ x, index }) =>\n      this.synths[index].triggerAttack(\n        closestFrequency(MAX_FREQ * x + MIN_FREQ)\n      )\n    );\n  };\n\n  synthUpdate = ({ x }: Position) => {\n    if (this.synths.length === 0) {\n      return;\n    }\n\n    this.synths[0].frequency.value = MAX_FREQ * x + MIN_FREQ;\n  };\n\n  synthsUpdate = (updatedPositions: IndexPosition[]) => {\n    if (this.synths.length === 0) {\n      return;\n    }\n\n    updatedPositions.forEach(\n      ({ x, index }) =>\n        (this.synths[index].frequency.value = MAX_FREQ * x + MIN_FREQ)\n    );\n  };\n\n  synthEnd = () => {\n    if (this.synths.length === 0) {\n      return;\n    }\n\n    this.synths[0].triggerRelease();\n  };\n\n  synthsEnd = (updatedPositions: IndexPosition[]) => {\n    if (this.synths.length === 0) {\n      return;\n    }\n\n    updatedPositions.forEach(({ index }) =>\n      this.synths[index].triggerRelease()\n    );\n  };\n}\n","// The x,y here should be a 0 > 1 range that is Pos(X|Y) / Screen(Width|Height)\nexport const positionToColor = (x: number, y: number) => ({\n  r: Math.round(64 + 125 * x + 64 * Math.sin(x)),\n  g: Math.round(64 + 125 * (1 - y) + 64 * Math.cos(y)),\n  b: Math.round(64 + 125 * y + 64 * Math.cos(y))\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}